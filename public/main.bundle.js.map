{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/about/about.component.css","./src/app/about/about.component.html","./src/app/about/about.component.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/dashboard/dashboard.component.css","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/friends/friends.component.css","./src/app/friends/friends.component.html","./src/app/friends/friends.component.ts","./src/app/home/home.component.css","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/login/login.component.css","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/app/models/fileDetails.model.ts","./src/app/navbar/navbar.component.css","./src/app/navbar/navbar.component.html","./src/app/navbar/navbar.component.ts","./src/app/receipts/receipts.component.css","./src/app/receipts/receipts.component.html","./src/app/receipts/receipts.component.ts","./src/app/register/register.component.css","./src/app/register/register.component.html","./src/app/register/register.component.ts","./src/app/services/auth.service.ts","./src/app/services/filter.pipe.ts","./src/app/services/guard.service.ts","./src/app/services/loggedinguard.service.ts","./src/app/services/upload.service.ts","./src/app/services/validation.service.ts","./src/app/setting/setting.component.css","./src/app/setting/setting.component.html","./src/app/setting/setting.component.ts","./src/app/transactions/transactions.component.css","./src/app/transactions/transactions.component.html","./src/app/transactions/transactions.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/about/about.component.css\n// module id = ./src/app/about/about.component.css\n// module chunks = main","module.exports = \"<p>\\r\\n  about works! yayyyyyyyyy\\r\\n</p>\\r\\n<div class=\\\"alert alert-success alert-dismissible\\\">\\r\\n    <a href=\\\"#\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"close\\\">&times;</a>\\r\\n    <strong>Success!</strong> This alert box could indicate a successful or positive action.\\r\\n  </div>\\r\\n  <div class=\\\"alert alert-info alert-dismissible\\\">\\r\\n    <a href=\\\"#\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"close\\\">&times;</a>\\r\\n    <strong>Info!</strong> This alert box could indicate a neutral informative change or action.\\r\\n  </div>\\r\\n  <div class=\\\"alert alert-warning alert-dismissible\\\">\\r\\n    <a href=\\\"#\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"close\\\">&times;</a>\\r\\n    <strong>Alert!</strong> This alert box could indicate a warning that might need attention.\\r\\n  </div>\\r\\n  <div class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n    <a href=\\\"#\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"close\\\">&times;</a>\\r\\n    <strong>Oops!</strong> This alert box could indicate a dangerous or potentially negative action.\\r\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/about/about.component.html\n// module id = ./src/app/about/about.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.css']\r\n})\r\nexport class AboutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/about/about.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"\\r\\n<!-- Nav bar -->\\r\\n<app-navbar></app-navbar>\\r\\n\\r\\n<!-- Other routes -->\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n  \\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\n// import array:\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HttpModule } from '@angular/http';\r\n// import array: (Messages)\r\nimport { ToastModule } from 'ng2-toastr/ng2-toastr';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n// Firebase;\r\nimport { AngularFireModule } from 'angularfire2';\r\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\r\n// initialize for firebase\r\nimport { environment } from '../environments/environment'; \r\n\r\n\r\n// declarations array:\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { FriendsComponent } from './friends/friends.component';\r\nimport { TransactionsComponent } from './transactions/transactions.component';\r\nimport { ReceiptsComponent } from './receipts/receipts.component';\r\nimport { SettingComponent } from './setting/setting.component';\r\nimport { FilterPipe } from './services/filter.pipe';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\n\r\n// provider array:\r\nimport { AuthService } from './services/auth.service'; \r\nimport { ValidationService } from './services/validation.service';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { GuardService } from './services/guard.service';\r\nimport { LoggedinguardService } from './services/loggedinguard.service';\r\nimport { UploadService } from './services/upload.service';\r\n\r\n// all the routes:\r\nconst appRoutes: Routes =[\r\n  { path: '', component: HomeComponent },//home page  \r\n  { path: 'register', component: RegisterComponent, canActivate: [LoggedinguardService] },\r\n  { path: 'login', component: LoginComponent, canActivate: [LoggedinguardService] },\r\n  { path: 'user/dashboard', component: DashboardComponent, canActivate: [GuardService]},// after logged in\r\n  { path: 'user/friends', component: FriendsComponent, canActivate: [GuardService]},\r\n  { path: 'user/transactions', component: TransactionsComponent, canActivate: [GuardService]},\r\n  { path: 'user/receipts', component: ReceiptsComponent, canActivate: [GuardService]},\r\n  { path: 'user/setting', component: SettingComponent, canActivate: [GuardService]},\r\n  { path: 'about', component: AboutComponent },\r\n  { path: '**', redirectTo: '', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    RegisterComponent,\r\n    DashboardComponent,\r\n    FriendsComponent,\r\n    TransactionsComponent,\r\n    ReceiptsComponent,\r\n    SettingComponent,\r\n    FilterPipe,\r\n    AboutComponent,\r\n    NavbarComponent,\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    ToastModule.forRoot(),\r\n    RouterModule.forRoot(appRoutes),\r\n    AngularFireModule.initializeApp(environment.firebase),\r\n    AngularFireDatabaseModule\r\n  ],\r\n  providers: [AuthService, \r\n    ValidationService, \r\n    GuardService, \r\n    LoggedinguardService,  \r\n    HttpClientModule, \r\n    HttpModule,\r\n    UploadService\r\n  \r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/dashboard.component.css\n// module id = ./src/app/dashboard/dashboard.component.css\n// module chunks = main","module.exports = \"<p>\\r\\n  dashboard works!\\r\\n</p>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/dashboard.component.html\n// module id = ./src/app/dashboard/dashboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/dashboard.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/friends/friends.component.css\n// module id = ./src/app/friends/friends.component.css\n// module chunks = main","module.exports = \"\\r\\n\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-2\\\">\\r\\n        <!-- Search -->\\r\\n        <!-- <div class=\\\"card\\\"> -->\\r\\n            <form>\\r\\n                <!-- <div class=\\\"card-body\\\"> -->\\r\\n                  <!-- <h6 class=\\\"card-title\\\"> -->\\r\\n                  <h6>\\r\\n                    <strong>Search</strong>\\r\\n                  </h6>\\r\\n                  \\r\\n                  <table class=\\\"table table-hover\\\">\\r\\n                    <tbody>\\r\\n                      <tr>\\r\\n                        <td>\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                              <input placeholder=\\\"*Enter Name\\\" type=\\\"text\\\" name=\\\"inputString\\\" [(ngModel)] = \\\"inputString\\\" class=\\\"form-control\\\">\\r\\n                          </div>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                      <tr>\\r\\n                        <button class=\\\"btn btn-success\\\" (click)=\\\"search_contact()\\\">Search</button>&nbsp;\\r\\n                        <button class=\\\"btn btn-danger\\\" (click)=\\\"clearSearch()\\\">Clear</button>\\r\\n                      </tr>\\r\\n                    </tbody>\\r\\n                  </table>\\r\\n                <!-- </div> -->\\r\\n              </form>\\r\\n          <!-- </div> -->\\r\\n        <!-- End Search -->\\r\\n  \\r\\n        <!-- Add -->\\r\\n        <form>\\r\\n            <!-- <div class=\\\"card-body half\\\"> -->\\r\\n              <!-- <h4 class=\\\"card-title\\\"><strong>Add Contact</strong></h4> -->\\r\\n              <h6><strong>Add Contact</strong></h6>\\r\\n              <table class=\\\"table table-hover\\\">\\r\\n                <tbody>\\r\\n                  <tr>\\r\\n                    <td>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <!-- <label><h6><strong>Firstname:</strong></h6></label> -->\\r\\n                        <input placeholder=\\\"*Enter Firstname\\\" type=\\\"text\\\" name=\\\"firstName\\\" [(ngModel)] = \\\"firstName\\\" class=\\\"form-control\\\">\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                          <!-- <label><h6><strong>Lastname:</strong></h6></label> -->\\r\\n                          <input placeholder=\\\"*Enter Lastname\\\" type=\\\"text\\\" name=\\\"lastName\\\" [(ngModel)] = \\\"lastName\\\" class=\\\"form-control\\\">\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                          <!-- <label><h6><strong>Preferred Name:</strong></h6></label> -->\\r\\n                          <input placeholder=\\\"*Enter Preferred Name\\\" type=\\\"text\\\" name=\\\"preferredName\\\" [(ngModel)] = \\\"preferredName\\\" class=\\\"form-control\\\">\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                          <!-- <label><h6><strong>Address:</strong></h6></label> -->\\r\\n                          <input placeholder=\\\"*Enter Address\\\" type=\\\"text\\\" name=\\\"address\\\" [(ngModel)] = \\\"address\\\" class=\\\"form-control\\\">\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                          <!-- <label><h6><strong>Email:</strong></h6></label> -->\\r\\n                          <input placeholder=\\\"*Enter Email\\\" type=\\\"text\\\" name=\\\"email\\\" [(ngModel)] = \\\"email\\\" class=\\\"form-control\\\">\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                          <!-- <label><h6><strong>Home Phone:</strong></h6></label> -->\\r\\n                          <input placeholder=\\\"*Enter Home Phone\\\" type=\\\"text\\\" name=\\\"homePhone\\\" [(ngModel)] = \\\"homePhone\\\" class=\\\"form-control\\\">\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                          <!-- <label><h6><strong>Cell Phone:</strong></h6></label> -->\\r\\n                          <input placeholder=\\\"*Enter Cell Phone\\\" type=\\\"text\\\" name=\\\"cellPhone\\\" [(ngModel)] = \\\"cellPhone\\\" class=\\\"form-control\\\">\\r\\n                      </div>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <td>\\r\\n                        <!-- <input type=\\\"submit\\\" value=\\\"Submit\\\" class=\\\"btn btn-success\\\"> -->\\r\\n                        <button class=\\\"btn btn-success\\\" (click)=\\\"onSubmitButton()\\\">Submit</button>&nbsp;\\r\\n                        <button class=\\\"btn btn-danger\\\" (click)=\\\"clear()\\\">Clear</button>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n              </table>\\r\\n            <!-- </div> -->\\r\\n          </form>\\r\\n        <!-- End add -->\\r\\n      </div>\\r\\n  \\r\\n  \\r\\n      <div class=\\\"col-md-10\\\">\\r\\n        <!-- Contact list -->\\r\\n        <!-- Contact list -->\\r\\n    <!-- <div class=\\\"card\\\"> -->\\r\\n        <!-- <div class=\\\"card-body\\\"> -->\\r\\n          <!-- <h4 class=\\\"card-title\\\"><strong>Contact List</strong></h4> -->\\r\\n          <h6><strong>Contact List</strong></h6>\\r\\n          <table class=\\\"table table-hover\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th><h6><strong>Number</strong></h6></th>\\r\\n                <th><h6><strong>Firstname</strong></h6></th>\\r\\n                <th><h6><strong>Lastname</strong></h6></th>\\r\\n                <th><h6><strong>Preferred Name</strong></h6></th>\\r\\n                <th><h6><strong>Address</strong></h6></th>\\r\\n                <th><h6><strong>Email</strong></h6></th>\\r\\n                <th><h6><strong>Home Phone</strong></h6></th>\\r\\n                <th><h6><strong>Cell Phone</strong></h6></th>\\r\\n                <th><h6><strong>Options</strong></h6></th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <!-- <tr *ngFor=\\\"let contact of hack(contactlist); let i = index\\\"> -->\\r\\n                <tr *ngFor=\\\"let contact of hack(contactlist) | filter:inputString; let i = index\\\">\\r\\n                  <td>{{i+1}}</td>\\r\\n                  <td>{{contact.firstName}}</td>\\r\\n                  <td>{{contact.lastName}}</td>\\r\\n                  <td>{{contact.preferredName}}</td>\\r\\n                  <td>{{contact.address}}</td>\\r\\n                  <td>{{contact.email}}</td>\\r\\n                  <td>{{contact.homePhone}}</td>\\r\\n                  <td>{{contact.cellPhone}}</td>\\r\\n                  <td>\\r\\n                      <button class=\\\"btn btn-danger\\\" (click)=\\\"onDeleteButton(contact)\\\">Delete</button>&nbsp;\\r\\n                      <button class=\\\"btn btn-info\\\" (click)=\\\"onEditButton(contact)\\\" >Edit</button>\\r\\n                  </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        <!-- </div> -->\\r\\n  \\r\\n        <!-- End of contact list -->\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n  \\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/friends/friends.component.html\n// module id = ./src/app/friends/friends.component.html\n// module chunks = main","import { Component, OnInit, ViewContainerRef , ComponentFactoryResolver, NgZone, ApplicationRef} from '@angular/core';\r\nimport { ToastsManager, ToastOptions } from 'ng2-toastr/ng2-toastr';\r\nimport { AuthService }  from '../services/auth.service';\r\nimport { Router, Route } from '@angular/router';\r\nimport { Contact } from '../services/contact';\r\nimport { ValidationService  } from '../services/validation.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-friends',\r\n  templateUrl: './friends.component.html',\r\n  styleUrls: ['./friends.component.css']\r\n})\r\nexport class FriendsComponent implements OnInit {\r\n\r\n  // Search input string:\r\n  inputString:string;\r\n\r\n  // user object and user ID holder \r\n  user: Object;\r\n  userID: string;\r\n\r\n  // Single contact or array contact\r\n  contact:Contact;\r\n  contactlist:Contact[];\r\n\r\n  // Initialize theses for adding a new contact\r\n  _id:string;\r\n  firstName: string;\r\n  lastName: string;\r\n  preferredName: string;\r\n  address: string;\r\n  email: string;\r\n  homePhone: string;\r\n  cellPhone: string;\r\n  user_id: string;\r\n\r\n  constructor(private authService: AuthService,\r\n              private router: Router,\r\n              private validationService: ValidationService,\r\n              public toastr: ToastsManager, vcr: ViewContainerRef,\r\n              componentFactoryResolver: ComponentFactoryResolver, ngZone: NgZone, appRef: ApplicationRef, options: ToastOptions) \r\n    {\r\n      this.toastr.setRootViewContainerRef(vcr);\r\n      Object.assign(options, {\r\n      maxShown: 1,\r\n      positionClass: \"toast-top-center\",\r\n      showCloseButton: true,\r\n      toastLife: 3000\r\n      });\r\n\r\n      // =============== More Toastr message options here: ===============\r\n      // toast-top-right (Default)\r\n      // toast-top-center\r\n      // toast-top-left\r\n      // toast-top-full-width\r\n      // toast-bottom-right\r\n      // toast-bottom-center\r\n      // toast-bottom-left\r\n      // toast-bottom-full-width\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.getDashboard();\r\n  }\r\n\r\n    // ========== Toastr Messages =======================================\r\n    showSuccess(msg) {\r\n      this.toastr.success(msg, 'Success!');\r\n    }\r\n  \r\n    showWarning(msg) {\r\n      this.toastr.warning(msg, 'Alert!');\r\n    }\r\n  \r\n    showError(msg) {\r\n      this.toastr.error(msg, 'Oops!');\r\n    }\r\n\r\n    showInfo(msg){\r\n      this.toastr.info(msg, 'Info!');\r\n    }\r\n\r\n    // ========= Helper functions ============================\r\n    clear(){\r\n      this._id = undefined;\r\n      this.firstName = undefined;\r\n      this.lastName = undefined;\r\n      this.preferredName = undefined;\r\n      this.address = undefined;\r\n      this.email = undefined;\r\n      this.homePhone = undefined;\r\n      this.cellPhone = undefined;\r\n      this.user_id = undefined;\r\n      // this.showInfo('Cleared!');\r\n    }\r\n\r\n    clearSearch(){\r\n      this.inputString = undefined;\r\n      this.showInfo('Cleared Search!');\r\n    }\r\n  \r\n    hack(val){\r\n      console.log(\"hack: \"+val);\r\n      return val;\r\n    }\r\n\r\n    // ========= Fetch the contact list ======================\r\n  // Get the user data from the database:\r\n  getDashboard(){\r\n    this.authService.userDashboard().subscribe(dashboard =>{\r\n    this.user = dashboard['user'];\r\n    this.userID = dashboard['user']._id;\r\n    this.contactlist = dashboard['contactlist'];\r\n  }, err =>{\r\n    console.log('Failed to get the dashboard! err: '+err);\r\n    this.router.navigate(['']);\r\n    return false;\r\n  });\r\n}\r\n\r\n   // ============= Add, Search, Edit, Delete =================\r\n\r\n   onSubmitButton(){\r\n    const new_contact = {\r\n      _id: this._id,\r\n      firstName: this.firstName,\r\n      lastName: this.lastName,\r\n      preferredName: this.preferredName,\r\n      address: this.address,\r\n      email: this.email,\r\n      homePhone: this.homePhone,\r\n      cellPhone: this.cellPhone,\r\n      user_id: this.userID\r\n    }\r\n\r\n    if(!this.validationService.validateAdd(new_contact)){\r\n      this.showWarning('Please fill in all fields');\r\n      return false;\r\n    }\r\n\r\n    if(!this.validationService.validateEmail(new_contact.email)){\r\n      this.showWarning('Please use a valid email.');\r\n      return false;\r\n    }\r\n\r\n    if(new_contact._id == undefined){\r\n      this.add_contact(new_contact);\r\n    }\r\n    if(new_contact._id != undefined){\r\n      this.edit_contact(new_contact);\r\n    }\r\n    \r\n}\r\n\r\nonEditButton(contact){\r\n  this._id = contact._id;\r\n  this.firstName = contact.firstName;\r\n  this.lastName = contact.lastName;\r\n  this.preferredName = contact.preferredName;\r\n  this.address = contact.address;\r\n  this.email = contact.email;\r\n  this.homePhone = contact.homePhone;\r\n  this.cellPhone = contact.cellPhone;\r\n  this.user_id = contact.userID;\r\n  this.showWarning('A contact is being updated!');\r\n}\r\n\r\nadd_contact(newContact){\r\n    this.authService.addContact(newContact).subscribe(data=>{\r\n    this.showSuccess('Friend added!');\r\n    this.getDashboard();\r\n  }, err=>{\r\n    this.showError('Failed to add a contact!'+err);\r\n  });\r\n  this.getDashboard();\r\n  this.clear();\r\n}\r\n\r\nedit_contact(existing_contact){\r\n    this.authService.updateContact(existing_contact).subscribe(data =>{\r\n    this.getDashboard();\r\n    this.showSuccess('Updated Contact!');\r\n  }, err=>{\r\n    this.showError('Failed to update a contact!'+err);\r\n  });\r\n  this.clear();\r\n  // Feel the power of the twin!! or not\r\n  this.getDashboard();\r\n}\r\n\r\nsearch_contact(){\r\n  if(this.inputString == undefined){\r\n    this.showError('Empty search!');\r\n    return false;\r\n  }\r\n}\r\n\r\nonDeleteButton(contact){\r\n  this.authService.deleteContact(contact).subscribe(data=>{\r\n    this.contactlist.splice(this.contactlist.indexOf(contact),1);\r\n    this.showSuccess('Deleted a contact');\r\n    this.getDashboard();\r\n  }, err =>{\r\n    console.log('Failed to delete a contact!'+err);\r\n  });\r\n  this.getDashboard();\r\n}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/friends/friends.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.css\n// module id = ./src/app/home/home.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\" id=\\\"row\\\">\\r\\n    <div class=\\\"col\\\" id=\\\"col\\\">\\r\\n        <img src=\\\"../../assets/rumi logo.png\\\" width=\\\"400\\\" href=\\\"/\\\" class=\\\"align-self-center\\\">\\r\\n    </div>\\r\\n  \\r\\n    <div class=\\\"col align-self-center\\\" id=\\\"col\\\">\\r\\n      <!-- {{ tagline }} -->\\r\\n      <p>\\r\\n      <p>\\r\\n        <a ui-sref=\\\"register\\\" [routerLink]=\\\"['/register']\\\" class=\\\"btn\\\" id=\\\"button_main_color\\\">Get Started!</a>\\r\\n        <a ui-sref=\\\"download\\\" href=\\\"https://www.youtube.com/watch?v=vTcf4Io209E\\\" class=\\\"btn\\\" id=\\\"button_main_color\\\">Download</a>\\r\\n      </p>\\r\\n      <p>\\r\\n      <p>Already have an account?  <a ui-sref=\\\"login\\\" [routerLink]=\\\"['/login']\\\" >Login here</a>.\\r\\n    </div>\\r\\n  </div>\\r\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = ./src/app/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.css\n// module id = ./src/app/login/login.component.css\n// module chunks = main","module.exports = \"\\r\\n<div class=\\\"row\\\" id=\\\"user_form\\\" *ngIf=\\\"!authService.isLoggedIn()\\\">\\r\\n  <div class=\\\"col align-self-center\\\">\\r\\n    <h2 class=\\\"page-header\\\">Login</h2>\\r\\n\\r\\n    <!-- Start form -->\\r\\n    <form class=\\\"form-signin\\\">\\r\\n\\r\\n      <!-- Username -->\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"Username\\\" class=\\\"col-sm-3 col-form-label\\\">Username</label>\\r\\n        <div class=\\\"col-sm-9\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"*michaelscott\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- Password -->\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"Password\\\" class=\\\"col-sm-3 col-form-label\\\">Password</label>\\r\\n        <div class=\\\"col-sm-9\\\">\\r\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"******\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- Buttons -->\\r\\n      <button class=\\\"btn btn-success\\\" (click)=\\\"onLoginSubmit()\\\">Login</button>&nbsp;\\r\\n      <button class=\\\"btn btn-danger\\\" (click)=\\\"onCancelSubmit()\\\">Cancel</button><br><br>\\r\\n\\r\\n      <!-- Navigate back to register page -->\\r\\n      <p>Don't have an account yet? <a [routerLink] = \\\"['/register']\\\">Register Here</a></p> \\r\\n    </form>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n      \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.html\n// module id = ./src/app/login/login.component.html\n// module chunks = main","import { Component, OnInit, ViewContainerRef, ComponentFactoryResolver, NgZone, ApplicationRef } from '@angular/core';\r\nimport { Router, Route } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { ValidationService } from '../services/validation.service';\r\nimport { ToastsManager, ToastOptions } from 'ng2-toastr/ng2-toastr';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit  {\r\n\r\n  // Declared variables:\r\n  token: any;\r\n  username:String;\r\n  password:String;\r\n\r\n\r\n  warning :any;\r\n  warningMsg: string = \"Please fill in all fields!\";\r\n\r\n  // Inject into the constructor\r\n  constructor(private router: Router,\r\n    private validateService : ValidationService,\r\n    public authService: AuthService,\r\n    public toastr: ToastsManager, vcr: ViewContainerRef,\r\n    componentFactoryResolver: ComponentFactoryResolver, ngZone: NgZone, appRef: ApplicationRef, options: ToastOptions) { \r\n      this.toastr.setRootViewContainerRef(vcr);\r\n      Object.assign(options, {\r\n      maxShown: 1,\r\n      positionClass: \"toast-top-center\",\r\n      showCloseButton: true,\r\n      toastLife: 3000\r\n      });\r\n\r\n      // =============== More Toastr message options here: ===============\r\n      // toast-top-right (Default)\r\n      // toast-top-center\r\n      // toast-top-left\r\n      // toast-top-full-width\r\n      // toast-bottom-right\r\n      // toast-bottom-center\r\n      // toast-bottom-left\r\n      // toast-bottom-full-width\r\n    }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n    // ========== Toastr Messages =======================================\r\n    showSuccess(msg) {\r\n      this.toastr.success(msg, 'Success!');\r\n    }\r\n  \r\n    showWarning(msg) {\r\n      // this.toastr.setupToast(toast:Toas, Position='toast-top-right');\r\n      this.toastr.warning(msg, 'Alert!');\r\n    }\r\n  \r\n    showError(msg) {\r\n      this.toastr.error(msg, 'Oops!');\r\n    }\r\n\r\n  // ======= Login and Cancel functions ============\r\n  onLoginSubmit(){\r\n    const user = {\r\n      username: this.username,\r\n      password: this.password\r\n    };\r\n\r\n    if(!this.validateService.validateLogin(user)){\r\n      this.warning = true;\r\n      this.showWarning('Please fill in all fields!');\r\n      return false;\r\n    }\r\n\r\n    this.authService.loginUser(user).subscribe(data =>{\r\n      var success = data['success'];\r\n      if(success){\r\n        const token = data['token'];\r\n        const userObject = data['user'];\r\n        this.authService.storeUserToken(token, userObject);\r\n        this.showSuccess('You have logged in!');\r\n        this.authService.setLoggedIn();\r\n        this.router.navigate(['/user/dashboard']);\r\n      }\r\n\r\n      // Error messages should be: wrong password || user not found\r\n      if(!success){\r\n        this.showError(data['msg']);\r\n        this.router.navigate(['/login']);\r\n      }\r\n\r\n    }, err =>{\r\n      // When the server is not running on the backend\r\n      this.showError('Oh no! Something went wrong. Please try again!');\r\n      console.log(err);\r\n      this.router.navigate(['/login']);\r\n    })\r\n\r\n  }\r\n\r\n  onCancelSubmit(){\r\n    this.username = undefined;\r\n    this.password = undefined;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","export class FileDetails {\r\n    $key: string;\r\n    file: File;\r\n    url: string;\r\n    progress: number;\r\n    createOn: Date = new Date();\r\n    name: string;\r\n\r\n    constructor(file: File) {\r\n        this.file = file;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/fileDetails.model.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/navbar/navbar.component.css\n// module id = ./src/app/navbar/navbar.component.css\n// module chunks = main","module.exports = \" \\r\\n<!-- Navbar -->\\r\\n<nav class=\\\"navbar navbar-expand-lg navbar-dark justify-content-between\\\" id=\\\"navbar\\\">\\r\\n  <!-- Rumi logo -->\\r\\n  <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\"><img src=\\\"../assets/rumi logo.png\\\" width=\\\"50\\\" alt=\\\"\\\"></a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor01\\\" aria-controls=\\\"navbarColor01\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <!-- Links -->\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor01\\\">\\r\\n\\r\\n      <!-- Left links -->\\r\\n      <ul class=\\\"navbar-nav mr-auto navbar-left\\\">\\r\\n        \\r\\n        <!-- Home -->\\r\\n        <li class=\\\"nav-item active\\\"\\r\\n        [routerLinkActive]=\\\"['active']\\\"\\r\\n        [routerLinkActiveOptions] =\\\"{exact:true}\\\">\\r\\n          <a class=\\\"nav-link btn\\\" [routerLink]=\\\"['/']\\\">Home</a>\\r\\n        </li>\\r\\n        \\r\\n        &nbsp;&nbsp;\\r\\n\\r\\n        <!-- About -->\\r\\n        <li class=\\\"nav-item active\\\"\\r\\n        [routerLinkActive]=\\\"['active']\\\"\\r\\n        [routerLinkActiveOptions] =\\\"{exact:true}\\\">\\r\\n          <a class=\\\"nav-link btn\\\" [routerLink]=\\\"['/about']\\\">About</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n      <!-- End left links -->\\r\\n\\r\\n      <!-- Right links -->\\r\\n      <ul class=\\\"navbar-nav navbar-right\\\">\\r\\n\\r\\n        <!-- After logged in: Dashboard -->\\r\\n        <li class=\\\"nav-item active\\\"\\r\\n        [routerLinkActive]=\\\"['active']\\\"\\r\\n        [routerLinkActiveOptions] =\\\"{exact:true}\\\"\\r\\n        *ngIf=\\\"authService.isLoggedIn()\\\">\\r\\n          <a class=\\\"nav-link btn\\\" [routerLink]=\\\"['/user/dashboard']\\\">Dashboard <span class=\\\"sr-only\\\">(current)</span></a>\\r\\n        </li>\\r\\n        &nbsp;&nbsp;\\r\\n\\r\\n        <!-- After logged in: Friends -->\\r\\n        <li class=\\\"nav-item active\\\"\\r\\n        [routerLinkActive]=\\\"['active']\\\"\\r\\n        [routerLinkActiveOptions] =\\\"{exact:true}\\\"\\r\\n        *ngIf=\\\"authService.isLoggedIn()\\\">\\r\\n          <a class=\\\"nav-link btn\\\" [routerLink]=\\\"['/user/friends']\\\">Friends</a>\\r\\n        </li>\\r\\n        &nbsp;&nbsp;\\r\\n\\r\\n        <!-- After logged in: Transactions -->\\r\\n        <li class=\\\"nav-item active\\\"\\r\\n        [routerLinkActive]=\\\"['active']\\\"\\r\\n        [routerLinkActiveOptions] =\\\"{exact:true}\\\"\\r\\n        *ngIf=\\\"authService.isLoggedIn()\\\">\\r\\n          <a class=\\\"nav-link btn\\\" [routerLink]=\\\"['/user/transactions']\\\">Transactions</a>\\r\\n        </li>\\r\\n        &nbsp;&nbsp;\\r\\n\\r\\n        <!-- After logged in: Receipts -->\\r\\n        <li class=\\\"nav-item active\\\"\\r\\n        [routerLinkActive]=\\\"['active']\\\"\\r\\n        [routerLinkActiveOptions] =\\\"{exact:true}\\\"\\r\\n        *ngIf=\\\"authService.isLoggedIn()\\\">\\r\\n          <a class=\\\"nav-link btn\\\" [routerLink]=\\\"['/user/receipts']\\\">Receipts</a>\\r\\n        </li>\\r\\n        &nbsp;&nbsp;\\r\\n\\r\\n        <!-- After logged in: Setting -->\\r\\n        <li class=\\\"nav-item active\\\"\\r\\n        [routerLinkActive]=\\\"['active']\\\"\\r\\n        [routerLinkActiveOptions] =\\\"{exact:true}\\\"\\r\\n        *ngIf=\\\"authService.isLoggedIn()\\\">\\r\\n          <a class=\\\"nav-link btn\\\" [routerLink]=\\\"['/user/setting']\\\">Setting</a>\\r\\n        </li>\\r\\n        &nbsp;&nbsp;\\r\\n\\r\\n        <!-- After logged in: Register wont show -->\\r\\n        <li class=\\\"nav-item active\\\"\\r\\n        [routerLinkActive]=\\\"['active']\\\"\\r\\n        [routerLinkActiveOptions] =\\\"{exact:true}\\\"\\r\\n        *ngIf=\\\"!authService.isLoggedIn()\\\">\\r\\n          <a class=\\\"nav-link btn\\\" [routerLink]=\\\"['/register']\\\">Register</a>\\r\\n        </li>\\r\\n        &nbsp;&nbsp;\\r\\n\\r\\n         <!-- Before logged in: Log out wont show -->\\r\\n        <li class=\\\"nav-item active\\\"\\r\\n        *ngIf=\\\"authService.isLoggedIn()\\\">\\r\\n          <a class=\\\"nav-link btn\\\" [routerLink]=\\\"['/']\\\" (click)=\\\"onLogoutClick()\\\">Log out</a>\\r\\n        </li>\\r\\n        \\r\\n      </ul>\\r\\n      <!-- End right links -->\\r\\n  \\r\\n    </div>\\r\\n\\r\\n</nav>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/navbar/navbar.component.html\n// module id = ./src/app/navbar/navbar.component.html\n// module chunks = main","import { Component, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { ToastsManager } from 'ng2-toastr/ng2-toastr';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor(public authService: AuthService,\r\n    public toastr: ToastsManager, vcr: ViewContainerRef) { \r\n      this.toastr.setRootViewContainerRef(vcr);\r\n    }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  // ========== Toastr Messages =======================================\r\n  showSuccess(msg) {\r\n    this.toastr.info(msg, 'Success!');\r\n  }\r\n  \r\n  onLogoutClick(){\r\n    this.showSuccess('You have logged out!');\r\n    this.authService.logout();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/navbar/navbar.component.ts","module.exports = \"ul { padding:0; width:1200px; margin:20px auto}\\r\\nli { display:inline;}\\r\\n.tn {\\r\\n  margin:6px 6px;\\r\\n  border: 4px solid #eee;\\r\\n  -webkit-box-shadow:#555 1px 1px 8px 1px;\\r\\n          box-shadow:#555 1px 1px 8px 1px;\\r\\n  cursor: pointer;\\r\\n  width: 300px;\\r\\n}\\r\\nh2{\\r\\n  margin-bottom: 20px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/receipts/receipts.component.css\n// module id = ./src/app/receipts/receipts.component.css\n// module chunks = main","module.exports = \"\\r\\n<div class=\\\"container\\\">\\r\\n  <h2 class=\\\"heading\\\">Upload New Images</h2>\\r\\n  <!-- Progress Bar -->\\r\\n  <div *ngIf=\\\"upload\\\">\\r\\n    <div class=\\\"progress\\\">\\r\\n      <div class=\\\"progress-bar progress-bar-animated\\\"\\r\\n        [ngStyle]=\\\"{ 'width': upload?.progress + '%' }\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n    Progress: {{upload?.progress}}% Complete\\r\\n  </div><hr>\\r\\n  <!-- Input and Upload Button -->\\r\\n  <input type=\\\"file\\\" (change)=\\\"handleFiles($event)\\\" multiple>\\r\\n  <button class=\\\"btn btn-primary\\\" (click)=\\\"uploadFiles()\\\">Upload Images</button>  \\r\\n  <button class=\\\"btn btn-danger\\\" (click)=\\\"reload()\\\">Refesh ittt</button>\\r\\n</div>\\r\\n\\r\\n<!-- Display Images -->\\r\\n<div class=\\\"row\\\">\\r\\n  <h2>Latest Photos</h2>\\r\\n  <ul id=\\\"thumbnailsList\\\">\\r\\n      <li *ngFor=\\\"let image of receiptsList\\\" class=\\\"img\\\">\\r\\n          <!-- <a [routerLink]=\\\"['/image', image.key]\\\"> -->\\r\\n          <a href=\\\"{{image.link}}\\\">\\r\\n          <img src=\\\"{{image.link}}\\\" class=\\\"tn\\\">\\r\\n          </a>\\r\\n      </li>\\r\\n  </ul>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/receipts/receipts.component.html\n// module id = ./src/app/receipts/receipts.component.html\n// module chunks = main","// Logic: \r\n// Get the file/image info in the list of files/images (handleFiles method)\r\n// Store the files/images into another database (firebase console).\r\n// (UploadFiles method will call uploadFile() in services/upload.service)\r\n        // ^ The purpose of this is to store the file/img somewhere else\r\n        // instead for mLab (which saved me some pains) and get the URL link\r\n        // of the img/file then store the link in our mLab\r\n// Retrieve the file/img URL, and make a POST request to the backend and \r\n// save the file/image info into our mLab remote database under\r\n// the \"receipts\" collection. \r\n// (addPictureToMlab() method in services/upload.service will call \r\n// addReceipts() method in services/auth.service to make an http POST request)\r\n\r\n// If you have any question about he frontend or backend, let me know.\r\n// Steve _m_(^___^)_m_\r\n\r\nimport { Component, OnInit, OnChanges, Input, SimpleChanges  } from '@angular/core';\r\nimport { UploadService } from '../services/upload.service';\r\nimport { FileDetails } from '../models/fileDetails.model';\r\nimport * as _ from 'lodash'; // to help loop over files \r\nimport { HttpClientModule } from '@angular/common/http'; \r\nimport { HttpModule } from '@angular/http';\r\nimport { ImgDetails } from '../models/imgDetails.model';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n// Bring in firebase to upload the files/images to the storage and database\r\n// in firebase console\r\nimport { AngularFireModule } from 'angularfire2';\r\nimport {  AngularFireDatabase,\r\n          AngularFireList, \r\n          AngularFireObject, \r\n          snapshotChanges } from 'angularfire2/database';\r\nimport * as firebase from 'firebase';\r\n\r\n@Component({\r\n  selector: 'app-receipts',\r\n  templateUrl: './receipts.component.html',\r\n  styleUrls: ['./receipts.component.css']\r\n})\r\nexport class ReceiptsComponent implements OnInit, OnChanges {\r\n\r\n  @Input() finishedProgress; \r\n\r\n  checkpoint: number = 0;\r\n\r\n  progress: any;\r\n\r\n  // Initialize the type for these variables\r\n  files:FileList;\r\n  upload:FileDetails;\r\n  pic:ImgDetails;\r\n\r\n  // This is will hold all the json objects retrieved from mlab database\r\n  receiptsList: any[];\r\n\r\n   // user object and user ID holder \r\n   user: Object;\r\n   userID: string;\r\n\r\n  // Inject the uploadservice and authservice \r\n  // to upload the files/images and make a POST request \r\n  // to the backend and save the picture details into mLab\r\n  constructor(private uploadService : UploadService,\r\n              private authService: AuthService) { }\r\n\r\n  // Make a GET request to the backend on the first load\r\n  // to retrive the files/images\r\n  ngOnInit() {\r\n    this.getPictures();\r\n    // this.fbGetData();\r\n  }\r\n\r\n\r\n  reload(){\r\n    // console.log('In here');\r\n    this.getPictures();\r\n  }\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    console.log(changes.finishedProgress.currentValue);// current selected value\r\n    console.log(changes.finishedProgress.previousValue);// previous selected value\r\n    this.getPictures();\r\n\r\n    \r\n    \r\n  }\r\n\r\n  // This method listener will watch for changes from the firebase console\r\n  // whenever a new file/img add to the database, this will fire and call the \r\n  // backend the load the new file/img to the receiptList.\r\n  fbGetData(){\r\n    firebase.database().ref('/uploads/').on('child_added', (result) => {\r\n      console.log('Just ADDED a child !!!!');\r\n      console.log(result.val());\r\n      // this.receiptsList.push(result.val());\r\n      this.getPictures();     \r\n    });\r\n  }\r\n\r\n  // On the first load, get the user info\r\n  // user id and the receiptList from \"receipts\" collection\r\n  // in mLab database\r\n  getPictures(){\r\n      this.authService.getReceipts().subscribe(data =>{\r\n      this.user = data['user'];\r\n      this.userID = data['user']._id;\r\n      this.receiptsList = data['receiptList'];\r\n      console.log('Success! Got the pic infor.');\r\n      console.log(this.receiptsList)\r\n    }, err =>{\r\n      console.log('Failed to get the picture! err: '+err);\r\n      // this.router.navigate(['']);\r\n      return false;\r\n    });\r\n  }\r\n\r\n  \r\n  // Only take the files/images info from the $event\r\n  handleFiles(event) {\r\n    // console.log(event.target.files); \r\n    this.files =  event.target.files;\r\n  }\r\n\r\n  // Loop through each file/img in the file/img list and call \r\n  // upload service to upload each file/img to Firebase Console\r\n  uploadFiles() {\r\n    // Get the files from the global var \"files\"\r\n    const filesToUpload = this.files;\r\n    const length = _.range(filesToUpload.length);\r\n    \r\n    _.each(length, (index) => {\r\n      // each log will print out the each file infor in the array filesToUpload \r\n      // console.log(filesToUpload[index]);\r\n      this.upload = new FileDetails(filesToUpload[index]);\r\n      this.uploadService.uploadFile(this.upload);\r\n    });\r\n\r\n    this.fbGetData();\r\n    this.getPictures();\r\n  }\r\n\r\n  // To be deleted :)\r\n  get(){\r\n    console.log(this.uploadService.getImageId());\r\n    console.log(this.uploadService.getImageLink());\r\n    console.log(this.uploadService.getImageName());\r\n  }\r\n\r\n  // To be deleted :)\r\n  clearArray(){\r\n    this.uploadService.clearList();\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/receipts/receipts.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/register/register.component.css\n// module id = ./src/app/register/register.component.css\n// module chunks = main","module.exports = \"\\r\\n<div class=\\\"row\\\" id=\\\"user_form\\\" *ngIf=\\\"!authService.isLoggedIn()\\\">\\r\\n    <div class=\\\"col align-self-center\\\">\\r\\n    <h2 class=\\\"page-header\\\">Register</h2>\\r\\n    <form class=\\\"form-signin\\\">\\r\\n        <!-- <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"firstname\\\" class=\\\"col-sm-3 col-form-label\\\">First Name</label>\\r\\n          <div class=\\\"col-sm-9\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"*Michael\\\" [(ngModel)]=\\\"firstname\\\" name=\\\"firstname\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n            <label for=\\\"lastname\\\" class=\\\"col-sm-3 col-form-label\\\">Last Name</label>\\r\\n            <div class=\\\"col-sm-9\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"*Scott\\\" [(ngModel)]=\\\"lastname\\\" name=\\\"lastname\\\">\\r\\n            </div>\\r\\n        </div> -->\\r\\n        \\r\\n        <div class=\\\"form-group row\\\">\\r\\n            <label for=\\\"name\\\" class=\\\"col-sm-3 col-form-label\\\">Name</label>\\r\\n            <div class=\\\"col-sm-9\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"*Michael Scott\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    \\r\\n        <div class=\\\"form-group row\\\">\\r\\n            <label for=\\\"email\\\" class=\\\"col-sm-3 col-form-label\\\">Email</label>\\r\\n            <div class=\\\"col-sm-9\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"*mscott@dundermifflin.com\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n            <label for=\\\"username\\\" class=\\\"col-sm-3 col-form-label\\\">Username</label>\\r\\n            <div class=\\\"col-sm-9\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"*michaelscott\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n            <label for=\\\"password\\\" class=\\\"col-sm-3 col-form-label\\\">Password</label>\\r\\n            <div class=\\\"col-sm-9\\\">\\r\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"*******\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n      </form>\\r\\n      \\r\\n      <button class=\\\"btn btn-success\\\" (click)=\\\"onRegisterSubmit()\\\">Register</button>&nbsp;\\r\\n      <button class=\\\"btn btn-danger\\\" (click)=\\\"onCancelSubmit()\\\">Cancel</button><br><br>\\r\\n      <p>Already have an account? <a [routerLink] = \\\"['/login']\\\">Login Here</a></p>\\r\\n \\r\\n</div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/register/register.component.html\n// module id = ./src/app/register/register.component.html\n// module chunks = main","import { Component, OnInit, ViewContainerRef, ComponentFactoryResolver, NgZone, ApplicationRef } from '@angular/core';\r\nimport { Router, Route } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { ValidationService } from '../services/validation.service';\r\nimport { ToastsManager, ToastOptions} from 'ng2-toastr/ng2-toastr';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  // Declared variables:\r\n  name: String;\r\n  email: String;\r\n  username: String;\r\n  password: String;\r\n\r\n  constructor(private router: Router,\r\n              private validateService : ValidationService,\r\n              public authService: AuthService,\r\n              public toastr: ToastsManager, vcr: ViewContainerRef,\r\n              componentFactoryResolver: ComponentFactoryResolver, ngZone: NgZone, appRef: ApplicationRef, options: ToastOptions) { \r\n                this.toastr.setRootViewContainerRef(vcr);\r\n                Object.assign(options, {\r\n                  maxShown: 1,\r\n                  positionClass: \"toast-top-center\",\r\n                  showCloseButton: true,\r\n                  toastLife: 3000\r\n                  });\r\n              }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  // ========== Toastr Messages =======================================\r\n  showSuccess(msg) {\r\n    this.toastr.success(msg, 'Success!');\r\n  }\r\n\r\n  showWarning(msg) {\r\n    this.toastr.warning(msg, 'Alert!');\r\n  }\r\n\r\n  showError(msg) {\r\n    this.toastr.error(msg, 'Oops!');\r\n  }\r\n\r\n\r\n  // ========= Submit and Cancel functions =====================\r\n  onRegisterSubmit(){\r\n    \r\n    const user = {\r\n      name: this.name,\r\n      email: this.email,\r\n      username: this.username,\r\n      password: this.password\r\n    };\r\n    \r\n    if(!this.validateService.validateRegister(user)){\r\n      this.showWarning('Please fill in all fields');\r\n      return false;\r\n    }\r\n\r\n    if(!this.validateService.validateEmail(user.email)){\r\n      this.showWarning('Please use a valid email');\r\n      return false;\r\n    }\r\n\r\n    this.authService.registerUser(user).subscribe(\r\n      data =>{\r\n        // this.showSuccess('You are registered and now can log in.');\r\n        this.showSuccess('You are registered and now can log in');\r\n        this.router.navigate(['/login']);\r\n    }, error => {\r\n        this.showError('Something went wrong, please try again');\r\n       // this.showError();\r\n        this.router.navigate(['/register']);\r\n    });\r\n\r\n  }\r\n\r\n  onCancelSubmit(){\r\n    this.username = undefined;\r\n    this.name = undefined;\r\n    this.email = undefined;\r\n    this.password = undefined;\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/register/register.component.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Contact } from './contact';\r\nimport { Userinfo } from './userinfo';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n  // =========== Declared Variables: ===================================\r\n  authToken: any; // token holder\r\n  user: any;      // user object holder\r\n  loggedIn:any;   // logged in True/False \r\n\r\n  // =========== Http base uri and headers =============================\r\n  private baseUri:string=\"http://localhost:8080\";\r\n  private headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n  \r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  // =========== Helper functions =====================================\r\n  // Load the saved token from local storage into authToken val,\r\n  // when a user logged in and came back to the website\r\n  loadToken(){\r\n    const token = localStorage.getItem('id_token');\r\n    this.authToken = token;\r\n  }\r\n\r\n  // Store the generated token and user object into the local storage\r\n  storeUserToken(token, user){\r\n    localStorage.setItem('id_token', token);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    this.authToken = token;\r\n    this.user = user;\r\n  }\r\n\r\n  // Set the logged in to true\r\n  setLoggedIn(){\r\n    this.loggedIn = true;\r\n  }\r\n\r\n  // Check if the user has logged in before and has a save token\r\n  isLoggedIn(){\r\n    this.loadToken();\r\n    (this.authToken) ? this.setLoggedIn() : this.loggedIn = false;\r\n    return this.loggedIn;\r\n  }\r\n\r\n  logout(){\r\n    this.loggedIn = false;\r\n    this.authToken = null;\r\n    this.user = null;\r\n    localStorage.clear();\r\n  }\r\n  // =========== HTTP request functions ===============================\r\n  // POST: register\r\n  registerUser(user){\r\n    return this.http.post(this.baseUri+'/register', user, {headers:this.headers});\r\n  }\r\n\r\n  // POST: login\r\n  loginUser(user){\r\n    return this.http.post(this.baseUri+'/login', user, {headers:this.headers});\r\n  }\r\n\r\n  \r\n\r\n  // GET: user dashboard\r\n  userDashboard(){\r\n    // Load the token into the authToken const:\r\n    this.loadToken();\r\n    console.log('userDashboard service: ', this.authToken)\r\n    this.headers = new HttpHeaders().set('Authorization', this.authToken);\r\n    return this.http.get(this.baseUri+'/user/friends', {headers:this.headers});\r\n  }\r\n    \r\n    // ========== Http Add, Update, Delete request functions =====\r\n\r\n    addContact(contact: Contact){\r\n      return this.http.post(this.baseUri+'/user/friends/add', contact, {headers:this.headers});\r\n    }\r\n\r\n    updateContact(contact: Contact){\r\n      return this.http.put(this.baseUri+'/user/friends/update', contact, {headers:this.headers});\r\n    }\r\n\r\n    deleteContact(contact: Contact){\r\n      const id = contact._id;\r\n      return this.http.delete(this.baseUri+'/user/friends/delete/'+id, {headers:this.headers});\r\n    }\r\n  \r\n    // ===================== Setting =======================================================\r\n    // GET: user profile\r\n    userProfile(){\r\n      // Load the token into the authToken const:\r\n      this.loadToken();\r\n    \r\n      this.headers = new HttpHeaders().set('Authorization', this.authToken);\r\n      return this.http.get(this.baseUri+'/user/setting', {headers:this.headers});\r\n    }\r\n\r\n    changePassword(update_user: Userinfo){\r\n      return this.http.put(this.baseUri+'/user/setting/changepassword', update_user, {headers:this.headers});\r\n \r\n    }\r\n\r\n    // ====================== Receipts ======================================================\r\n    // GET: getReceipts\r\n    getReceipts(){\r\n      // Load the token into the authToken const:\r\n      this.loadToken();\r\n      this.headers = new HttpHeaders().set('Authorization', this.authToken);\r\n      return this.http.get(this.baseUri+'/user/receipts', {headers:this.headers});\r\n    }\r\n\r\n    // POST: save the receipts to the mLab database under \"receipts\" collection\r\n    addReceipts(receipts){\r\n      this.loadToken();\r\n      this.headers = new HttpHeaders().set('Authorization', this.authToken);\r\n      return this.http.post(this.baseUri+'/user/receipts/upload', receipts, {headers:this.headers})\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/auth.service.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filter'\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n\r\n  transform(contactlist: any, inputString: any): any {\r\n    // Check if the search inputString is empty/undefined\r\n    if(inputString === undefined){\r\n      return contactlist;\r\n    }\r\n    // If there is input string to search:\r\n    return contactlist.filter(function(retVal){\r\n      return retVal.firstName.toLowerCase().includes(inputString.toLowerCase());\r\n    }); \r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/filter.pipe.ts","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class GuardService {\r\n\r\n  constructor(public authService: AuthService, public router: Router) { }\r\n\r\n  canActivate(): boolean {\r\n    if(this.authService.isLoggedIn()){\r\n      return true;\r\n    }else{\r\n      this.router.navigate(['']);\r\n      return false;\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/guard.service.ts","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class LoggedinguardService {\r\n\r\n  constructor(public authService: AuthService, public router: Router) { }\r\n\r\n  canActivate(): boolean {\r\n    if(this.authService.isLoggedIn()){\r\n      this.router.navigate(['user/dashboard']);\r\n      return false;\r\n    }else{\r\n      return true;\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/loggedinguard.service.ts","import { Injectable } from '@angular/core';\n\n// Bring in file details object from models folder\nimport { FileDetails } from '../models/fileDetails.model';\n\n// Bring in firebase\nimport { AngularFireModule } from 'angularfire2';\nimport {  AngularFireDatabase,\n          AngularFireList, \n          AngularFireObject, \n          snapshotChanges } from 'angularfire2/database';\nimport * as firebase from 'firebase';\n\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { ImgDetails } from '../models/imgDetails.model';\n\nimport { AuthService } from '../services/auth.service';\n\n\n\n\n@Injectable()\nexport class UploadService {\n\n  private basePath = '/uploads';\n  \n  finishedProgress: any;\n\n  // These variables will return the picture url and its id \n  pic_link:string;\n  pic_id:string;\n  pic_name:string;\n\n  name:string;\n  link:string;\n  key:string;\n\n  image:ImgDetails;\n  imageList = [];\n\n  constructor(private ngFire: AngularFireModule,\n              private db: AngularFireDatabase,\n              private authService: AuthService) { }\n\n  getList(){\n    return;\n  }\n\n  getImageLink(){\n    return this.link;\n  }\n  getImageId(){\n    return this.key;\n  }\n  getImageName(){\n    return this.name;\n  }\n\n  uploadFile(upload: FileDetails) {\n\n    const new_name = Math.random().toString(36).substring(7) + new Date().getTime();\n    \n    console.log('New name is: ', new_name);\n\n    // Get the the ref of storage in firebse console\n    const storageRef = firebase.storage().ref();\n    // Upload the file to storage\n    const uploadTask = storageRef.child(`${this.basePath}/${new_name}`)\n    .put(upload.file);\n    \n    \n\n    // All of these are for the progress bar beauty >___< \n    uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED ,\n    // Three observers\n    // 1) State_changed observer\n    (snapshot) => {\n      //upload in progress\n      upload.progress = Math.round(\n      (uploadTask.snapshot.bytesTransferred \n        / uploadTask.snapshot.totalBytes ) * 100);\n      console.log(upload.progress+'%');\n    },\n    // 2) error observer\n    (err) => {\n      // upload failed\n      console.log('Upload failed, pay ur electricity bill, err msg => : ', err);\n    },\n    // 3) success observer\n    (): any => {\n      upload.url = uploadTask.snapshot.downloadURL;\n      upload.name = new_name;\n      \n      this.saveFileData(upload);\n    } );\n\n  }\n\n  // This method will save the file/img data to the database\n  // because we stored the img/file into the storage already.\n  // Easy for later if we need to look up the file/img in the\n  // firebase console, maybe delete/edit feature? :) \n  // NOTE: *********** delete/edit the file/img in the firebase \n  // console database.(FEATURES!)\n  public saveFileData(upload: FileDetails) {\n\n    this.db.list(`${this.basePath}/`).push(upload).then(res => {\n        const picture = {\n        pic_key: res.key,\n        pic_name: upload.name,\n        pic_link: upload.url     \n      };\n      this.imageList.push(picture);\n      // console.log('this is the LIST ******', this.imageList);\n      this.image = picture;\n      this.addPictureToMlab();\n    });    \n  }\n\n  clearList(){\n    this.imageList.length = 0;\n    console.log('this is the LIST ****** after cleared', this.imageList);\n  }\n\n  // Make an http POST request to the backend to save the file/img\n  // to the mLab remote database\n  addPictureToMlab(){\n    this.authService.addReceipts(this.image).subscribe(data => {\n      console.log('Success Uploaded!', data);\n      this.finishedProgress = true;\n    },\n    err => {\n      console.log('Failed!! please not here, err msg: ', err);\n    });\n\n  }\n              \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/upload.service.ts","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ValidationService {\r\n\r\n  constructor() { }\r\n\r\n  validateRegister(user){\r\n    if(user.name == undefined || user.email == undefined || user.username == undefined || user.password == undefined){\r\n      return false;\r\n    }else{\r\n      return true;\r\n    }\r\n  }\r\n\r\n  validateLogin(user){\r\n    if(user.username == undefined || user.password == undefined){\r\n      return false;\r\n    }else{\r\n      return true;\r\n    }\r\n  }\r\n\r\n  validateEmail(email){\r\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  }\r\n\r\n  validateAdd(user){\r\n    if((user.firstName == undefined|| user.lastName == undefined|| user.preferredName == undefined|| user.address == undefined || user.email== undefined || user.homePhone == undefined|| user.cellPhone== undefined)){\r\n      return false;\r\n    }else{\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/validation.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/setting/setting.component.css\n// module id = ./src/app/setting/setting.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\r\\n\\r\\n  <div *ngIf=\\\"user\\\" class=\\\"container\\\">\\r\\n      <h2 class=\\\"page-header\\\" style=\\\"color: rgb(223, 56, 35)\\\" >Welcome back, {{user.name}}.</h2>\\r\\n      <ul class=\\\"list-group\\\">\\r\\n        <li class=\\\"list-group-item\\\">ID: {{user._id}}</li>\\r\\n        <li class=\\\"list-group-item\\\">Name: {{user.name}}</li>\\r\\n        <li class=\\\"list-group-item\\\">Username: {{user.username}}</li>\\r\\n        <li class=\\\"list-group-item\\\">Email: {{user.email}}</li>\\r\\n        <li class=\\\"list-group-item\\\">Password: {{user.password}} <button class=\\\"btn btn-info\\\" (click)=\\\"onChangeButton()\\\">Change Password</button></li>\\r\\n        <li *ngIf=\\\"buttonclicked\\\" class=\\\"list-group-item\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <input placeholder=\\\"*New Password\\\" type=\\\"text\\\" name=\\\"newpassword\\\" [(ngModel)] = \\\"newpassword\\\" class=\\\"form-control\\\">\\r\\n            </div>\\r\\n            <button class=\\\"btn btn-info\\\" (click)=\\\"onSubmitButton()\\\">Submit</button>\\r\\n            <button class=\\\"btn btn-danger\\\" (click)=\\\"onCancelButton()\\\">Cancel</button>\\r\\n        </li>\\r\\n\\r\\n      </ul>\\r\\n    </div>\\r\\n  \\r\\n  </div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/setting/setting.component.html\n// module id = ./src/app/setting/setting.component.html\n// module chunks = main","import { Component, OnInit, ViewContainerRef, ComponentFactoryResolver, NgZone, ApplicationRef } from '@angular/core';\r\nimport { ToastsManager, ToastOptions } from 'ng2-toastr/ng2-toastr';\r\nimport { AuthService }  from '../services/auth.service';\r\nimport { Router, Route } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-setting',\r\n  templateUrl: './setting.component.html',\r\n  styleUrls: ['./setting.component.css']\r\n})\r\nexport class SettingComponent implements OnInit {\r\n\r\n  // user Object holder\r\n  user: Object;\r\n\r\n  // These will hold the old data before any changes \r\n  userID: string;\r\n  name: string;\r\n  username: string;\r\n  email: string;\r\n  password: string;\r\n\r\n  // new password to update\r\n  newpassword: any;\r\n\r\n  // this is for hide/show the input form for changing password\r\n  buttonclicked:boolean = false;\r\n\r\n  constructor(private authService: AuthService,\r\n    private router: Router,\r\n    public toastr: ToastsManager, vcr: ViewContainerRef,\r\n    componentFactoryResolver: ComponentFactoryResolver, ngZone: NgZone, appRef: ApplicationRef, options: ToastOptions) \r\n    {\r\n      this.toastr.setRootViewContainerRef(vcr);\r\n      Object.assign(options, {\r\n        maxShown: 1,\r\n        positionClass: \"toast-top-center\",\r\n        showCloseButton: true,\r\n        toastLife: 3000\r\n        });\r\n  \r\n        // =============== More Toastr message options here: ===============\r\n        // toast-top-right (Default)\r\n        // toast-top-center\r\n        // toast-top-left\r\n        // toast-top-full-width\r\n        // toast-bottom-right\r\n        // toast-bottom-center\r\n        // toast-bottom-left\r\n        // toast-bottom-full-width\r\n    }\r\n\r\n    ngOnInit() {\r\n      this.getUserProfile();\r\n    }\r\n\r\n    showError(msg) {\r\n      this.toastr.error(msg, 'Oops!');\r\n    }\r\n\r\n    showSuccess(msg) {\r\n      this.toastr.success(msg, 'Success!');\r\n    }\r\n\r\n   // Get the user data from the database:\r\n   getUserProfile(){\r\n    this.authService.userProfile().subscribe(profile =>{\r\n    this.user = profile['user'];\r\n    this.userID = profile['user']._id;\r\n    this.name = profile['user'].name;\r\n    this.username = profile['user'].username;\r\n    this.email = profile['user'].email;\r\n    this.password = profile['user'].password;\r\n\r\n  }, err =>{\r\n    console.log('Failed to get the profile! err: '+err);\r\n    this.router.navigate(['user/dashboard']);\r\n    return false;\r\n  });\r\n}\r\n\r\n  onChangeButton(){\r\n    (this.buttonclicked == false) ? this.buttonclicked = true : this.buttonclicked = false;\r\n  }\r\n\r\n  onCancelButton(){\r\n    this.newpassword = undefined;\r\n    this.buttonclicked = false;\r\n  }\r\n\r\n  onSubmitButton(){\r\n    \r\n    // Get the data from the user with the new password to change it\r\n    const update_user = {\r\n      _id: this.userID,\r\n      name: this.name,\r\n      username: this.username,\r\n      email: this.email,\r\n      password: this.newpassword\r\n    }\r\n\r\n    if(update_user.password == undefined){\r\n      this.showError(\"Please enter your new password!\");\r\n      return false;\r\n    }\r\n\r\n    // User authService (services/auth.service.ts) to make a call to the backend, routes/contacts.js\r\n    this.authService.changePassword(update_user).subscribe(data=>{\r\n      this.showSuccess('Password Updated!');      \r\n      // Get the new updated data\r\n      this.getUserProfile();\r\n      // Clear out the input form and close/hide it\r\n      this.onCancelButton();\r\n    }, err=>{\r\n      console.log('this is an err with http client '+err);\r\n    });\r\n \r\n\r\n  }\r\n\r\n  \r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/setting/setting.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/transactions/transactions.component.css\n// module id = ./src/app/transactions/transactions.component.css\n// module chunks = main","module.exports = \"<p>\\r\\n  transactions works!\\r\\n</p>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/transactions/transactions.component.html\n// module id = ./src/app/transactions/transactions.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-transactions',\r\n  templateUrl: './transactions.component.html',\r\n  styleUrls: ['./transactions.component.css']\r\n})\r\nexport class TransactionsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/transactions/transactions.component.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebase : {\r\n    apiKey: \"AIzaSyCrFHf3gTQZYgFK6IyHn2qdynxfPcZwEMM\",\r\n    authDomain: \"rumi-web-app-dc4af.firebaseapp.com\",\r\n    databaseURL: \"https://rumi-web-app-dc4af.firebaseio.com\",\r\n    projectId: \"rumi-web-app-dc4af\",\r\n    storageBucket: \"rumi-web-app-dc4af.appspot.com\",\r\n    messagingSenderId: \"353669083115\"\r\n  }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}